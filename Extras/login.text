import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:gmap_latlng_demo/Constants/messages.dart';
import 'package:gmap_latlng_demo/Pages/OTP/otp.dart';
import 'package:http/http.dart' as http;

import '../../Constants/global.dart';
import '../../helpers/internet_handler.dart';


class UserDetails extends StatefulWidget {
  const UserDetails({Key? key, required this.username, required this.password}) : super(key: key);
  
  final String username;
  final String password;

  @override
  State<UserDetails> createState() => _UserDetailsState();
}

class _UserDetailsState extends State<UserDetails> {

    @override
  void initState() {
    super.initState();
    authenticateUser();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Padding(
          padding: const EdgeInsets.symmetric(horizontal: 24.0),
          child: Column(
            mainAxisSize: MainAxisSize.min,
            children: const [
                SizedBox(height: 20),
                Text(
                  'Loggin In',
                  textAlign: TextAlign.center,
                  style: TextStyle(
                    fontSize: 24,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                SizedBox(height: 16),
              CircularProgressIndicator(),
              SizedBox(height: 32),
              Text("Please Wait..."),
            ],
          ),
        ),
      ),
    );
  }
      

authenticateUser() async {
   var response = await http.post(
    Uri.parse('https://web.multiplier.co.in/ALFFTS/alfftssr_login.action'),
    body: {
      'loginid': widget.username,
      'password': widget.password,
    },
   );

   if(response.statusCode == 200){
    tempnote = jsonDecode(response.body);
    tempnote['loginId'] = widget.username;
    print('loginpage : $notes');
    if(mounted){
      Navigator.of(context).pushReplacement(
        MaterialPageRoute(builder: (context) => const InternetConnectionState(
          child: OtpScreen()) ), 
        );
    }
   }
   else{
    if(mounted){
      ScaffoldMessenger.of(context).showSnackBar(snackBar_LoginError);
      Navigator.pop(context);
    }
   }
  
  }

}


// class UserLogin extends StatelessWidget {
//   const UserLogin({Key? key, required this.username, required this.password}) : super(key: key);

//   final String username;
//   final String password;

//   @override
  // Widget build(BuildContext context) {
  //   return SafeArea(
  //     child: Scaffold(
  //       body:FutureBuilder(
  //         builder: (BuildContext context,snapshot) {
  //           if (snapshot.connectionState == ConnectionState.done) {
  //             // ignore: avoid_print
  //             print(snapshot.data);
  //             if (snapshot.hasError) {
  //               return Center(
  //                 child: Text(
  //                   '${snapshot.error} occurred',
  //                   style: const TextStyle(fontSize: 18),
  //                 ),
  //               );
  //             } else if (snapshot.hasData) {
  //               Builder(builder: (context) => Navigator.of(context).pushReplacement(
  //                 MaterialPageRoute(builder: (context) => const OtpScreen() ))
  //               );
  //             }
  //           }
  //           return const Center(
  //             child: CircularProgressIndicator(),
  //           );
  //         },
 
  //         // Future that needs to be resolved
  //         // inorder to display something on the Canvas
  //         future: authenticateUser(),
  //       )
  //     )
  //   );
  // }

//   authenticateUser() async {
//    var response = await http.post(
//     Uri.parse('https://web.multiplier.co.in/ALFFTS/alfftssr_login.action'),
//     body: {
//       'loginid': username,
//       'password': password,
//     },
//    );

//    return jsonDecode(response.body);

//   //  print(response.body);

//   //  if(response.statusCode == 200){
//   //   // var datawithloginId = jsonDecode(response.body);
//   //   // datawithloginId['loginId'] = username;
//   //   // datawithloginId = jsonEncode(datawithloginId);
//   //   // final note = Note.fromJsonApi(jsonDecode(datawithloginId));
//   //   // await NotesDatabase.instance.create(note);
//   //   // if(mounted){
//   //     Navigator.of(context).pushReplacement(MaterialPageRoute(builder: (context) => const OtpScreen() ));
//   //   // }
//   //  }
//   //  else{
//   //   if(mounted){
//   //     ScaffoldMessenger.of(context).showSnackBar(snackBar_LoginError);
//   //     Navigator.pop(context);
//   //   }
//   //  }
  
//   }

// }